/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serialgui;

import com.fazecast.jSerialComm.SerialPort;
import java.awt.Color;
import java.awt.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.Arrays;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Geoff
 */
public class Gui extends javax.swing.JFrame {

    private SerialPort comPort;
    private int baud;

    public Gui() {
        initComponents();
        SerialPort[] computerPorts = SerialPort.getCommPorts();
        for (SerialPort p : computerPorts) {
            this.portList.addItem(p.getSystemPortName());
        }
        this.setTitle("Serial Reader & Writer");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.jButton1.setEnabled(false);
        this.jButton2.setEnabled(false);
        this.Output.setEditable(false);
        connectButton.setBackground(Color.green);
        this.ClearButton.setBackground(Color.yellow);
        this.pack();
    }

    private void writeto(String command) {
        byte[] buffer = command.getBytes();
        comPort.writeBytes(buffer, buffer.length);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        jFrame1 = new javax.swing.JFrame();
        portList = new javax.swing.JComboBox<>();
        connectButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Output = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        ClearButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        BaudCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        SaveButton = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        About = new javax.swing.JMenuItem();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        Output.setColumns(20);
        Output.setRows(5);
        jScrollPane1.setViewportView(Output);

        jLabel1.setText("Output");

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Port");

        BaudCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9600", "14400", "19200", "28800", "38400", "57600", "115200", "230400", "250000", "500000", "1000000", "2000000" }));

        jLabel3.setText("Baud Rate");

        jButton1.setText("Hello World");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Long List of Words");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        jMenu3.setText("File");

        SaveButton.setText("Save Output");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });
        jMenu3.add(SaveButton);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        jMenu4.add(About);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(14, 14, 14)
                                .addComponent(portList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(BaudCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectButton)
                    .addComponent(portList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearButton)
                    .addComponent(BaudCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        if (connectButton.getText().equals("Connect")) {
            baud = Integer.parseInt(this.BaudCombo.getItemAt(this.BaudCombo.getSelectedIndex()));
            this.BaudCombo.setEnabled(false);
            this.jButton1.setEnabled(true);
            this.jButton2.setEnabled(true);
            connectButton.setBackground(Color.red);
            // connect to serial port and set parameters
            comPort = com.fazecast.jSerialComm.SerialPort.getCommPort(portList.getSelectedItem().toString());
            comPort.setComPortParameters(baud, 8, 1, SerialPort.NO_PARITY);
            comPort.setComPortTimeouts(com.fazecast.jSerialComm.SerialPort.TIMEOUT_SCANNER, 0, 0);
            //if the comport is open make the connect button the disconnect button & disable changing the port
            if (comPort.openPort()) {
                connectButton.setText("Disconnect");
                portList.setEnabled(false);
            }

            // create a new thread
            Thread thread = new Thread() {
                @Override
                public void run() {
                    //set the scanner to the correct COM port
                    try (Scanner scanner = new Scanner(comPort.getInputStream())) {
                        //while theres data in the input
                        while (scanner.hasNextLine()) {
                            try {
                                String line = scanner.nextLine();
                                //append to output line count+info from serial+NL
                                Output.append(Output.getLineCount() + ": " + line + "\n");
                                //keeps the newest line on the textarea Output
                                Output.setCaretPosition(Output.getDocument().getLength());
                            } catch (Exception e) {
                                //print stack
                                System.out.print(Arrays.toString(e.getStackTrace()));
                            }
                        }
                    }
                }
            };
            thread.start();
        } else {
            // disconnect from the serial port
            comPort.closePort();
            portList.setEnabled(true);
            connectButton.setText("Connect");
            connectButton.setBackground(Color.green);
            this.jButton1.setEnabled(false);
            this.jButton2.setEnabled(false);
            this.BaudCombo.setEnabled(true);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //write whatever you want but put a \n at the end if Arduino
        writeto("v\n");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        //clear output
        this.Output.setText("");
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        //display info
        JOptionPane.showMessageDialog(null, "Serial Reader and Writer", "INFO", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_AboutActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        
        JFrame parentFrame = new JFrame();
        //create file chooser
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        int userSelection = fileChooser.showSaveDialog(parentFrame);
        //if accept the save button
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            //try to write the .txt file to location
            //buffered writer with file path and file type
            try (Writer output = new BufferedWriter(new FileWriter(fileToSave + ".txt", true));) {
                //take output and split up by newline
                String[] lines = Output.getText().split("\\n");
                for (String line : lines) {
                    output.append(line); //add to end of document
                    output.append(System.lineSeparator());//add new line
                }
                output.close();//IMPORTANT closes the doc
            } catch (IOException ex) {//fail to write
                System.out.println("Failed to append");
            }
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //write whatever you want but put a \n at the end if Arduino
        //this is to test the limit of this program and the receiver by sending large ammounts of data
        writeto("aviation\n"
                + "crack\n"
                + "stomach\n"
                + "activity\n"
                + "provision\n"
                + "scrape\n"
                + "television\n"
                + "glide\n"
                + "master\n"
                + "inspector\n"
                + "advertise\n"
                + "bathroom\n"
                + "far\n"
                + "clash\n"
                + "presidency\n"
                + "wriggle\n"
                + "budge\n"
                + "resign\n"
                + "tolerate\n"
                + "liability\n"
                + "chimpanzee\n"
                + "distribute\n"
                + "hurt\n"
                + "favourite\n"
                + "diagram\n"
                + "king\n"
                + "aloof\n"
                + "prejudice\n"
                + "freeze\n"
                + "form\n"
                + "slogan\n"
                + "team\n"
                + "pace\n"
                + "grass\n"
                + "construct\n"
                + "nominate\n"
                + "vein\n"
                + "width\n"
                + "velvet\n"
                + "secular\n"
                + "restrict\n"
                + "steward\n"
                + "enfix\n"
                + "candidate\n"
                + "committee\n"
                + "cooperate\n"
                + "marine\n"
                + "occupation\n"
                + "pocket\n"
                + "hostile\n"
                + "socialist\n"
                + "check\n"
                + "continuous\n"
                + "professional\n"
                + "kidney\n"
                + "conglomerate\n"
                + "rainbow\n"
                + "daughter\n"
                + "assembly\n"
                + "architecture\n"
                + "bear\n"
                + "adoption\n"
                + "commerce\n"
                + "reinforce\n"
                + "steep\n"
                + "bleed\n"
                + "seem\n"
                + "sulphur\n"
                + "rice\n"
                + "undermine\n"
                + "lecture\n"
                + "redeem\n"
                + "fame\n"
                + "sausage\n"
                + "cage\n"
                + "ghostwriter\n"
                + "jungle\n"
                + "worm\n"
                + "shoulder\n"
                + "pray\n"
                + "deep\n"
                + "blue\n"
                + "acquit\n"
                + "touch\n"
                + "willpower\n"
                + "species\n"
                + "routine\n"
                + "vision\n"
                + "flesh\n"
                + "agile\n"
                + "help\n"
                + "creed\n"
                + "industry\n"
                + "latest\n"
                + "shark\n"
                + "poem\n"
                + "habitat\n"
                + "monk\n"
                + "name\n"
                + "cord\n"
                + "fruit\n"
                + "distributor\n"
                + "base\n"
                + "grudge\n"
                + "helicopter\n"
                + "respect\n"
                + "recovery\n"
                + "suffer\n"
                + "profession\n"
                + "board\n"
                + "fade\n"
                + "reactor\n"
                + "thought\n"
                + "truck\n"
                + "break down\n"
                + "chin\n"
                + "concept\n"
                + "old age\n"
                + "insure\n"
                + "disaster\n"
                + "threat\n"
                + "stay\n"
                + "neighbour\n"
                + "environment\n"
                + "window\n"
                + "chase\n"
                + "real\n"
                + "functional\n"
                + "tasty\n"
                + "sun\n"
                + "butterfly\n"
                + "grateful\n"
                + "stuff\n"
                + "projection\n"
                + "mislead\n"
                + "orbit\n"
                + "symptom\n"
                + "filter\n"
                + "conscious\n"
                + "economics\n"
                + "guilt\n"
                + "menu\n"
                + "kitchen\n"
                + "sail\n"
                + "advertising\n"
                + "snake\n"
                + "seize\n"
                + "absence\n"
                + "stroke\n"
                + "custody\n"
                + "cater\n"
                + "friendly\n"
                + "zero\n"
                + "effect\n"
                + "cream\n"
                + "faint\n"
                + "bend\n"
                + "run\n"
                + "strict\n"
                + "apathy\n"
                + "despise\n"
                + "heart\n"
                + "lane\n"
                + "transition\n"
                + "operation\n"
                + "swallow\n"
                + "sex\n"
                + "embox\n"
                + "photography\n"
                + "gregarious\n"
                + "climb\n"
                + "sensation\n"
                + "abbey\n"
                + "last\n"
                + "nest\n"
                + "outside\n"
                + "despair\n"
                + "mutation\n"
                + "infrastructure\n"
                + "offense\n"
                + "engagement\n"
                + "sting\n"
                + "give\n"
                + "ivory\n"
                + "victory\n"
                + "supplementary\n"
                + "pottery\n"
                + "survey\n"
                + "stir\n"
                + "loan\n"
                + "agriculture\n"
                + "giant\n"
                + "prayer\n"
                + "hand\n"
                + "anniversary\n"
                + "expertise\n"
                + "member\n"
                + "transport\n"
                + "improve\n"
                + "catch\n"
                + "wife\n"
                + "revolutionary\n"
                + "ideology\n"
                + "hostage\n"
                + "shell\n"
                + "elapse\n"
                + "single\n"
                + "explosion\n"
                + "acquisition\n"
                + "quote\n"
                + "worry\n"
                + "bin\n"
                + "peel\n"
                + "cash\n"
                + "relate\n"
                + "youth\n"
                + "dignity\n"
                + "pepper\n"
                + "weigh\n"
                + "mouse\n"
                + "training\n"
                + "floor\n"
                + "society\n"
                + "torture\n"
                + "cheat\n"
                + "celebration\n"
                + "musical\n"
                + "folk music\n"
                + "lie\n"
                + "index finger\n"
                + "list\n"
                + "absent\n"
                + "bread\n"
                + "part\n"
                + "swop\n"
                + "graduate\n"
                + "health\n"
                + "mistreat\n"
                + "bullet\n"
                + "drill\n"
                + "gem\n"
                + "corn\n"
                + "white\n"
                + "mosaic\n"
                + "mother\n"
                + "privilege\n"
                + "middle\n"
                + "flawed\n"
                + "steak\n"
                + "intensify\n"
                + "rescue\n"
                + "pierce\n"
                + "mean\n"
                + "accessible\n"
                + "sermon\n"
                + "polite\n"
                + "voter\n"
                + "interest\n"
                + "flatware\n"
                + "pie\n"
                + "wood\n"
                + "outline\n"
                + "item\n"
                + "explode\n"
                + "ditch\n"
                + "academy\n"
                + "option\n"
                + "example\n"
                + "passion\n"
                + "old\n"
                + "attic\n"
                + "secretion\n"
                + "worth\n"
                + "artist\n"
                + "tired\n"
                + "black\n"
                + "pattern\n"
                + "adjust\n"
                + "indoor\n"
                + "science\n"
                + "pleasure\n"
                + "sculpture\n"
                + "tune\n"
                + "reality\n"
                + "sword\n"
                + "rage\n"
                + "remain\n"
                + "exercise\n"
                + "hen\n"
                + "behave\n"
                + "publisher\n"
                + "speaker\n"
                + "misplace\n"
                + "terrify\n"
                + "text\n"
                + "courage\n"
                + "investigation\n"
                + "majority\n"
                + "norm\n"
                + "fever\n"
                + "distant\n"
                + "suite\n"
                + "link\n"
                + "walk\n"
                + "insistence\n"
                + "electronics\n"
                + "visible\n"
                + "castle\n"
                + "morning\n"
                + "crop\n"
                + "movie\n"
                + "original\n"
                + "fare\n"
                + "prove\n"
                + "war\n"
                + "consolidate\n"
                + "dull\n"
                + "curriculum\n"
                + "know\n"
                + "rise\n"
                + "horseshoe\n"
                + "glow\n"
                + "work out\n"
                + "self\n"
                + "sacred\n"
                + "agency\n"
                + "TRUE\n"
                + "tap\n"
                + "coach\n"
                + "fountain\n"
                + "rare\n"
                + "shop\n"
                + "carbon\n"
                + "solid\n"
                + "release\n"
                + "rub\n"
                + "innocent\n"
                + "magnitude\n"
                + "trivial\n"
                + "describe\n"
                + "feel\n"
                + "temptation\n"
                + "meadow\n"
                + "zone\n"
                + "applaud\n"
                + "information\n"
                + "sandwich\n"
                + "prisoner\n"
                + "copyright\n"
                + "exhibition\n"
                + "expect\n"
                + "center\n"
                + "equinox\n"
                + "straight\n"
                + "fool\n"
                + "hit\n"
                + "pursuit\n"
                + "congress\n"
                + "qualify\n"
                + "reform\n"
                + "bubble\n"
                + "divide\n"
                + "physics\n"
                + "way\n"
                + "anxiety\n"
                + "clinic\n"
                + "differ\n"
                + "security\n"
                + "champagne\n"
                + "quantity\n"
                + "coincide\n"
                + "smile\n"
                + "wild\n"
                + "trunk\n"
                + "gutter\n"
                + "chart\n"
                + "charm\n"
                + "abortion\n"
                + "breeze\n"
                + "frequency\n"
                + "farewell\n"
                + "recommend\n"
                + "conscience\n"
                + "summit\n"
                + "slow\n"
                + "situation\n"
                + "elephant\n"
                + "opponent\n"
                + "mathematics\n"
                + "diamond\n"
                + "root\n"
                + "route\n"
                + "instrument\n"
                + "van\n"
                + "notion\n"
                + "angle\n"
                + "convert\n"
                + "garbage\n"
                + "distortion\n"
                + "creep\n"
                + "clarify\n"
                + "band\n"
                + "discover\n"
                + "central\n"
                + "extort\n"
                + "thank\n"
                + "investment\n"
                + "bride\n"
                + "tropical\n"
                + "transform\n"
                + "explain\n"
                + "makeup\n"
                + "retailer\n"
                + "system\n"
                + "cake\n"
                + "skilled\n"
                + "west\n"
                + "create\n"
                + "clearance\n"
                + "adventure\n"
                + "sharp\n"
                + "tumble\n"
                + "appearance\n"
                + "entry\n"
                + "height\n"
                + "advice\n"
                + "get\n"
                + "study\n"
                + "wind\n"
                + "yard\n"
                + "rung\n"
                + "complain\n"
                + "decline\n"
                + "adopt\n"
                + "leak\n"
                + "end\n"
                + "excavate\n"
                + "wedding\n"
                + "stop\n"
                + "mosquito\n"
                + "countryside\n"
                + "gradient\n"
                + "ground\n"
                + "beam\n"
                + "advocate\n"
                + "offensive\n"
                + "accountant\n"
                + "dawn\n"
                + "barrel\n"
                + "demonstrator\n"
                + "dialect\n"
                + "lung\n"
                + "nun\n"
                + "abolish\n"
                + "warning\n"
                + "troop\n"
                + "guide\n"
                + "principle\n"
                + "mountain\n"
                + "imperial\n"
                + "temple\n"
                + "pigeon\n"
                + "pound\n"
                + "control\n"
                + "relieve\n"
                + "inside\n"
                + "flush\n"
                + "pig\n"
                + "cane\n"
                + "Sunday\n"
                + "thumb\n"
                + "belief\n"
                + "scene\n"
                + "seal\n"
                + "echo\n"
                + "move\n"
                + "notebook\n"
                + "position\n"
                + "development\n"
                + "restaurant\n"
                + "equation\n"
                + "nightmare\n"
                + "hallway\n"
                + "hesitate\n"
                + "ordinary\n"
                + "ample\n"
                + "poison\n"
                + "shot\n"
                + "dump\n"
                + "escape\n"
                + "widen\n"
                + "acute\n"
                + "shock\n"
                + "motivation\n"
                + "cat\n"
                + "ghost\n"
                + "distinct\n"
                + "lazy\n"
                + "regard\n"
                + "crouch\n"
                + "anticipation\n"
                + "live\n"
                + "import\n"
                + "dismissal\n"
                + "back\n"
                + "put\n"
                + "unity\n"
                + "place\n"
                + "gravel\n"
                + "reduction\n"
                + "player\n"
                + "image\n"
                + "squash\n"
                + "precision\n"
                + "communication\n"
                + "helmet\n"
                + "eye\n"
                + "sister\n"
                + "plain\n"
                + "feminist\n"
                + "retiree\n"
                + "child\n"
                + "fiction\n"
                + "devote\n"
                + "prize\n"
                + "hardship\n"
                + "ton\n"
                + "sickness\n"
                + "table\n"
                + "popular\n"
                + "word\n"
                + "stimulation\n"
                + "tube\n"
                + "retirement\n"
                + "animal\n"
                + "bed\n"
                + "connection\n"
                + "astonishing\n"
                + "abstract\n"
                + "drop\n"
                + "category\n"
                + "budget\n"
                + "arrangement\n"
                + "fund\n"
                + "classroom\n"
                + "shorts\n"
                + "coat\n"
                + "oral\n"
                + "definition\n"
                + "soft\n"
                + "sit\n"
                + "electron\n"
                + "hut\n"
                + "preference\n"
                + "patch\n"
                + "mutter\n"
                + "decrease\n"
                + "fraction\n"
                + "strap\n"
                + "service\n"
                + "coal\n"
                + "thesis\n"
                + "penalty\n"
                + "appear\n"
                + "fog\n"
                + "price\n"
                + "listen\n"
                + "owner\n"
                + "coast\n"
                + "tender\n"
                + "correspondence\n"
                + "slam\n"
                + "oil\n"
                + "wait\n"
                + "gain\n"
                + "pick\n"
                + "artificial\n"
                + "fat\n"
                + "conversation\n"
                + "sanctuary\n"
                + "smoke\n"
                + "pledge\n"
                + "reaction\n"
                + "coerce\n"
                + "dome\n"
                + "correction\n"
                + "muscle\n"
                + "teenager\n"
                + "wheel\n"
                + "straw\n"
                + "weakness\n"
                + "constituency\n"
                + "ancestor\n"
                + "good\n"
                + "pain\n"
                + "hypnothize\n"
                + "insist\n"
                + "guideline\n"
                + "cold\n"
                + "cemetery\n");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Gui().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JComboBox<String> BaudCombo;
    private javax.swing.JButton ClearButton;
    private javax.swing.JTextArea Output;
    private javax.swing.JMenuItem SaveButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JComboBox<String> portList;
    // End of variables declaration//GEN-END:variables
}
